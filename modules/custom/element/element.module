<?php

/**
 * @file
 * Main module file for the Element module.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_theme().
 */
function element_theme() {
  return [
    'element' => [
      'render element' => 'content',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function element_theme_suggestions_element(array $variables) {
  $suggestions = [];
  $element = $variables['content']['#element'];
  $sanitized_view_mode = strtr($variables['content']['#view_mode'], '.', '_');

  $suggestions[] = 'element__' . $sanitized_view_mode;
  $suggestions[] = 'element__' . $element->bundle();
  $suggestions[] = 'element__' . $element->bundle() . '__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_help().
 */
function element_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.element':
      $text = file_get_contents(__DIR__ . '/README.md');
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . Html::escape($text) . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}
